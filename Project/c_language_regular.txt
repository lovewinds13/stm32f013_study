; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\c_language_regular.o --asm_dir=.\ --list_dir=.\ --depend=.\c_language_regular.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\c_language_regular.crf ..\App\src\c_language_regular.c]
                          THUMB

                          AREA ||i.heap_test||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_p
                          REQUIRE _printf_longlong_hex
                  heap_test PROC
;;;126    
;;;127    void heap_test(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;128    {
;;;129    	char *p1 = (char *)malloc(1 * sizeof(char));
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       malloc
00000a  4604              MOV      r4,r0
;;;130    	char *p2 = (char *)malloc(2 * sizeof(char));
00000c  2002              MOVS     r0,#2
00000e  f7fffffe          BL       malloc
000012  4605              MOV      r5,r0
;;;131    	char *p3 = (char *)malloc(4 * sizeof(char));
000014  2004              MOVS     r0,#4
000016  f7fffffe          BL       malloc
00001a  4606              MOV      r6,r0
;;;132    	char *p4 = (char *)malloc(8 * sizeof(char));
00001c  2008              MOVS     r0,#8
00001e  f7fffffe          BL       malloc
000022  4607              MOV      r7,r0
;;;133    	
;;;134    	printf("\r\n");
000024  a010              ADR      r0,|L1.104|
000026  f7fffffe          BL       __2printf
;;;135    	printf("p1    		address:   %p \r\n", p1);
00002a  4621              MOV      r1,r4
00002c  a00f              ADR      r0,|L1.108|
00002e  f7fffffe          BL       __2printf
;;;136    	printf("p2    		address:   %p \r\n", p2);
000032  4629              MOV      r1,r5
000034  a014              ADR      r0,|L1.136|
000036  f7fffffe          BL       __2printf
;;;137    	printf("p3    		address:   %p \r\n", p3);
00003a  4631              MOV      r1,r6
00003c  a019              ADR      r0,|L1.164|
00003e  f7fffffe          BL       __2printf
;;;138    	printf("p4    		address:   %p \r\n", p4);
000042  4639              MOV      r1,r7
000044  a01e              ADR      r0,|L1.192|
000046  f7fffffe          BL       __2printf
;;;139    	
;;;140    	free(p1);
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       free
;;;141    	free(p2);
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       free
;;;142    	free(p3);
000056  4630              MOV      r0,r6
000058  f7fffffe          BL       free
;;;143    	free(p4);
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       free
;;;144    }
000062  e8bd81f0          POP      {r4-r8,pc}
;;;145    
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
000068  0d0a00            DCB      "\r\n",0
00006b  00                DCB      0
                  |L1.108|
00006c  70312020          DCB      "p1    \t\taddress:   %p \r\n",0
000070  20200909
000074  61646472
000078  6573733a
00007c  20202025
000080  70200d0a
000084  00      
000085  00                DCB      0
000086  00                DCB      0
000087  00                DCB      0
                  |L1.136|
000088  70322020          DCB      "p2    \t\taddress:   %p \r\n",0
00008c  20200909
000090  61646472
000094  6573733a
000098  20202025
00009c  70200d0a
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L1.164|
0000a4  70332020          DCB      "p3    \t\taddress:   %p \r\n",0
0000a8  20200909
0000ac  61646472
0000b0  6573733a
0000b4  20202025
0000b8  70200d0a
0000bc  00      
0000bd  00                DCB      0
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L1.192|
0000c0  70342020          DCB      "p4    \t\taddress:   %p \r\n",0
0000c4  20200909
0000c8  61646472
0000cc  6573733a
0000d0  20202025
0000d4  70200d0a
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0

                          AREA ||i.macro_define_test||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  macro_define_test PROC
;;;26     //--------------------------------------------------------------------------------------------------------
;;;27     void macro_define_test(void)
000000  b570              PUSH     {r4-r6,lr}
;;;28     {
;;;29     	uint8_t tmp = 1;
000002  2501              MOVS     r5,#1
;;;30     	
;;;31     	for (uint16_t i = 0; i < 3; i++)
000004  2400              MOVS     r4,#0
000006  e008              B        |L2.26|
                  |L2.8|
;;;32     	{
;;;33     		FUNC_TEST1(6);
000008  2106              MOVS     r1,#6
00000a  a01d              ADR      r0,|L2.128|
00000c  f7fffffe          BL       __2printf
000010  a020              ADR      r0,|L2.148|
000012  f7fffffe          BL       __2printf
000016  1c60              ADDS     r0,r4,#1              ;31
000018  b284              UXTH     r4,r0                 ;31
                  |L2.26|
00001a  2c03              CMP      r4,#3                 ;31
00001c  dbf4              BLT      |L2.8|
;;;34     	}
;;;35     	
;;;36     	for (uint16_t i = 0; i < 3; i++)
00001e  2400              MOVS     r4,#0
000020  e00a              B        |L2.56|
                  |L2.34|
;;;37     	{
;;;38     		FUNC_TEST2(6);
000022  bf00              NOP      
000024  2106              MOVS     r1,#6
000026  a01e              ADR      r0,|L2.160|
000028  f7fffffe          BL       __2printf
00002c  a019              ADR      r0,|L2.148|
00002e  f7fffffe          BL       __2printf
000032  bf00              NOP      
000034  1c60              ADDS     r0,r4,#1              ;36
000036  b284              UXTH     r4,r0                 ;36
                  |L2.56|
000038  2c03              CMP      r4,#3                 ;36
00003a  dbf2              BLT      |L2.34|
;;;39     	}
;;;40     	
;;;41     	if (!tmp)
00003c  b97d              CBNZ     r5,|L2.94|
;;;42     	{
;;;43     		FUNC_TEST1(99);
00003e  2163              MOVS     r1,#0x63
000040  a00f              ADR      r0,|L2.128|
000042  f7fffffe          BL       __2printf
000046  a013              ADR      r0,|L2.148|
000048  f7fffffe          BL       __2printf
;;;44     		FUNC_TEST2(66);
00004c  bf00              NOP      
00004e  2142              MOVS     r1,#0x42
000050  a013              ADR      r0,|L2.160|
000052  f7fffffe          BL       __2printf
000056  a00f              ADR      r0,|L2.148|
000058  f7fffffe          BL       __2printf
00005c  e00f              B        |L2.126|
                  |L2.94|
;;;45     	}
;;;46     	else 
;;;47     	{
;;;48     		FUNC_TEST1(100);
00005e  2164              MOVS     r1,#0x64
000060  a007              ADR      r0,|L2.128|
000062  f7fffffe          BL       __2printf
000066  a00b              ADR      r0,|L2.148|
000068  f7fffffe          BL       __2printf
;;;49     		FUNC_TEST2(101);
00006c  bf00              NOP      
00006e  2165              MOVS     r1,#0x65
000070  a00b              ADR      r0,|L2.160|
000072  f7fffffe          BL       __2printf
000076  a007              ADR      r0,|L2.148|
000078  f7fffffe          BL       __2printf
00007c  bf00              NOP      
                  |L2.126|
;;;50     	}
;;;51     }
00007e  bd70              POP      {r4-r6,pc}
;;;52     
                          ENDP

                  |L2.128|
000080  31202d20          DCB      "1 - arg is %d \r\n",0
000084  61726720
000088  69732025
00008c  64200d0a
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L2.148|
000094  74657374          DCB      "test ok! \r\n",0
000098  206f6b21
00009c  200d0a00
                  |L2.160|
0000a0  32202d20          DCB      "2 - arg is %d \r\n",0
0000a4  61726720
0000a8  69732025
0000ac  64200d0a
0000b0  00      
0000b1  00                DCB      0
0000b2  00                DCB      0
0000b3  00                DCB      0

                          AREA ||i.pack_test||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_p
                          REQUIRE _printf_longlong_hex
                  pack_test PROC
;;;61     //--------------------------------------------------------------------------------------------------------
;;;62     void pack_test(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	uint8_t data_size = 0;
000002  2400              MOVS     r4,#0
;;;65     	
;;;66     //	data_size = sizeof(g_data_test);
;;;67     //	printf("struct test size is %d \r\n", data_size);
;;;68     	
;;;69     //	data_size = sizeof(g_send_msg);
;;;70     //	printf("struct test size is %d \r\n", data_size);
;;;71     //	
;;;72     //	printf("g_send_msg addr is			%p \r\n", &g_send_msg);
;;;73     //	printf("g_send_msg.head addr is 		%p \r\n", &g_send_msg.head);
;;;74     //	printf("g_send_msg.length addr is 		%p \r\n", &g_send_msg.length);
;;;75     //	printf("g_send_msg.crc addr is 			%p \r\n", &g_send_msg.crc);
;;;76     //	printf("g_send_msg.flag addr is 		%p \r\n", &g_send_msg.flag);
;;;77     	
;;;78     //	data_size = sizeof(g_data_tlv);
;;;79     //	printf("struct test size is %d \r\n", data_size);
;;;80     	printf("g_data_buff addr is			%p \r\n", &g_data_buff);
000004  4913              LDR      r1,|L3.84|
000006  a014              ADR      r0,|L3.88|
000008  f7fffffe          BL       __2printf
;;;81     	printf("g_data_buff[1] addr is			%p \r\n", &g_data_buff[1]);
00000c  4911              LDR      r1,|L3.84|
00000e  1c49              ADDS     r1,r1,#1
000010  a018              ADR      r0,|L3.116|
000012  f7fffffe          BL       __2printf
;;;82     	printf("g_data_buff[2] addr is			%p \r\n", &g_data_buff[2]);
000016  490f              LDR      r1,|L3.84|
000018  1c89              ADDS     r1,r1,#2
00001a  a01e              ADR      r0,|L3.148|
00001c  f7fffffe          BL       __2printf
;;;83     	
;;;84     	printf("g_data_buff1 addr is			%p \r\n", &g_data_buff1);
000020  4924              LDR      r1,|L3.180|
000022  a025              ADR      r0,|L3.184|
000024  f7fffffe          BL       __2printf
;;;85     	printf("g_data_buff1[1] addr is			%p \r\n", &g_data_buff1[1]);
000028  4922              LDR      r1,|L3.180|
00002a  1c49              ADDS     r1,r1,#1
00002c  a02a              ADR      r0,|L3.216|
00002e  f7fffffe          BL       __2printf
;;;86     	printf("g_data_buff1[2] addr is			%p \r\n", &g_data_buff1[2]);
000032  4920              LDR      r1,|L3.180|
000034  1c89              ADDS     r1,r1,#2
000036  a030              ADR      r0,|L3.248|
000038  f7fffffe          BL       __2printf
;;;87     	
;;;88     	printf("g_data_length addr is			%p \r\n", &g_data_length);
00003c  4936              LDR      r1,|L3.280|
00003e  a037              ADR      r0,|L3.284|
000040  f7fffffe          BL       __2printf
;;;89     	printf("g_data_length1 addr is			%p \r\n", &g_data_length1);
000044  493d              LDR      r1,|L3.316|
000046  a03e              ADR      r0,|L3.320|
000048  f7fffffe          BL       __2printf
;;;90     	printf("\r\n");
00004c  a010              ADR      r0,|L3.144|
00004e  f7fffffe          BL       __2printf
;;;91     }
000052  bd10              POP      {r4,pc}
;;;92     
                          ENDP

                  |L3.84|
                          DCD      g_data_buff
                  |L3.88|
000058  675f6461          DCB      "g_data_buff addr is\t\t\t%p \r\n",0
00005c  74615f62
000060  75666620
000064  61646472
000068  20697309
00006c  09092570
000070  200d0a00
                  |L3.116|
000074  675f6461          DCB      "g_data_buff[1] addr is\t\t\t%p "
000078  74615f62
00007c  7566665b
000080  315d2061
000084  64647220
000088  69730909
00008c  09257020
                  |L3.144|
000090  0d0a00            DCB      "\r\n",0
000093  00                DCB      0
                  |L3.148|
000094  675f6461          DCB      "g_data_buff[2] addr is\t\t\t%p \r\n",0
000098  74615f62
00009c  7566665b
0000a0  325d2061
0000a4  64647220
0000a8  69730909
0000ac  09257020
0000b0  0d0a00  
0000b3  00                DCB      0
                  |L3.180|
                          DCD      g_data_buff1
                  |L3.184|
0000b8  675f6461          DCB      "g_data_buff1 addr is\t\t\t%p \r\n",0
0000bc  74615f62
0000c0  75666631
0000c4  20616464
0000c8  72206973
0000cc  09090925
0000d0  70200d0a
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L3.216|
0000d8  675f6461          DCB      "g_data_buff1[1] addr is\t\t\t%p \r\n",0
0000dc  74615f62
0000e0  75666631
0000e4  5b315d20
0000e8  61646472
0000ec  20697309
0000f0  09092570
0000f4  200d0a00
                  |L3.248|
0000f8  675f6461          DCB      "g_data_buff1[2] addr is\t\t\t%p \r\n",0
0000fc  74615f62
000100  75666631
000104  5b325d20
000108  61646472
00010c  20697309
000110  09092570
000114  200d0a00
                  |L3.280|
                          DCD      g_data_length
                  |L3.284|
00011c  675f6461          DCB      "g_data_length addr is\t\t\t%p \r\n",0
000120  74615f6c
000124  656e6774
000128  68206164
00012c  64722069
000130  73090909
000134  2570200d
000138  0a00    
00013a  00                DCB      0
00013b  00                DCB      0
                  |L3.316|
                          DCD      g_data_length1
                  |L3.320|
000140  675f6461          DCB      "g_data_length1 addr is\t\t\t%p \r\n",0
000144  74615f6c
000148  656e6774
00014c  68312061
000150  64647220
000154  69730909
000158  09257020
00015c  0d0a00  
00015f  00                DCB      0

                          AREA ||i.stack_test||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_p
                          REQUIRE _printf_longlong_hex
                  stack_test PROC
;;;101    //--------------------------------------------------------------------------------------------------------
;;;102    void stack_test(void)
000000  b500              PUSH     {lr}
;;;103    {
000002  b089              SUB      sp,sp,#0x24
;;;104    #pragma pack(push, 1)	// 1/2/4/8
;;;105    struct st_test
;;;106    {
;;;107    	uint8_t val1;
;;;108    	uint32_t val2;
;;;109    };
;;;110    #pragma pack(pop)
;;;111    
;;;112    	uint8_t tmp1;
;;;113    	uint16_t tmp2;
;;;114    	uint32_t tmp3;
;;;115    	double data[2];
;;;116    	struct st_test tag_test;
;;;117    
;;;118    	printf("tmp1    		address:   %p \r\n", &tmp1);
000004  a908              ADD      r1,sp,#0x20
000006  a00f              ADR      r0,|L4.68|
000008  f7fffffe          BL       __2printf
;;;119    	printf("tmp2    		address:   %p \r\n", &tmp2);
00000c  a907              ADD      r1,sp,#0x1c
00000e  a014              ADR      r0,|L4.96|
000010  f7fffffe          BL       __2printf
;;;120    	printf("tmp3    		address:   %p \r\n", &tmp3);
000014  a906              ADD      r1,sp,#0x18
000016  a019              ADR      r0,|L4.124|
000018  f7fffffe          BL       __2printf
;;;121    	printf("data[0] 		address:   %p \r\n", &(data[0]));
00001c  a902              ADD      r1,sp,#8
00001e  a01e              ADR      r0,|L4.152|
000020  f7fffffe          BL       __2printf
;;;122    	printf("data[1] 		address:   %p \r\n", &(data[1]));
000024  a904              ADD      r1,sp,#0x10
000026  a023              ADR      r0,|L4.180|
000028  f7fffffe          BL       __2printf
;;;123    	printf("tag_test    	address:   %p \r\n", &tag_test);
00002c  4669              MOV      r1,sp
00002e  a028              ADR      r0,|L4.208|
000030  f7fffffe          BL       __2printf
;;;124    	printf("tag_test.val2 	address:   %p \r\n", &(tag_test.val2));
000034  f10d0101          ADD      r1,sp,#1
000038  a02d              ADR      r0,|L4.240|
00003a  f7fffffe          BL       __2printf
;;;125    }
00003e  b009              ADD      sp,sp,#0x24
000040  bd00              POP      {pc}
;;;126    
                          ENDP

000042  0000              DCW      0x0000
                  |L4.68|
000044  746d7031          DCB      "tmp1    \t\taddress:   %p \r\n",0
000048  20202020
00004c  09096164
000050  64726573
000054  733a2020
000058  20257020
00005c  0d0a00  
00005f  00                DCB      0
                  |L4.96|
000060  746d7032          DCB      "tmp2    \t\taddress:   %p \r\n",0
000064  20202020
000068  09096164
00006c  64726573
000070  733a2020
000074  20257020
000078  0d0a00  
00007b  00                DCB      0
                  |L4.124|
00007c  746d7033          DCB      "tmp3    \t\taddress:   %p \r\n",0
000080  20202020
000084  09096164
000088  64726573
00008c  733a2020
000090  20257020
000094  0d0a00  
000097  00                DCB      0
                  |L4.152|
000098  64617461          DCB      "data[0] \t\taddress:   %p \r\n",0
00009c  5b305d20
0000a0  09096164
0000a4  64726573
0000a8  733a2020
0000ac  20257020
0000b0  0d0a00  
0000b3  00                DCB      0
                  |L4.180|
0000b4  64617461          DCB      "data[1] \t\taddress:   %p \r\n",0
0000b8  5b315d20
0000bc  09096164
0000c0  64726573
0000c4  733a2020
0000c8  20257020
0000cc  0d0a00  
0000cf  00                DCB      0
                  |L4.208|
0000d0  7461675f          DCB      "tag_test    \taddress:   %p \r\n",0
0000d4  74657374
0000d8  20202020
0000dc  09616464
0000e0  72657373
0000e4  3a202020
0000e8  2570200d
0000ec  0a00    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L4.240|
0000f0  7461675f          DCB      "tag_test.val2 \taddress:   %p \r\n",0
0000f4  74657374
0000f8  2e76616c
0000fc  32200961
000100  64647265
000104  73733a20
000108  20202570
00010c  200d0a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_data_test
                          %        16
                  g_data_test1
                          %        12
                  g_data_buff
                          %        16
                  g_data_buff1
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  g_data_tlv
000000  0000              DCB      0x00,0x00
000002  0000              DCW      0x0000
000004  0000              DCB      0x00,0x00
                  g_send_msg
000006  00                DCB      0x00
                          DCDU     0x00000000
00000b  0000              DCWU     0x0000
00000d  000000            DCB      0x00,0x00,0x00
                  g_data_length
000010  0000              DCW      0x0000
                  g_data_length1
000012  0000              DCW      0x0000
