; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\stm32f10x_crc.o --asm_dir=.\ --list_dir=.\ --depend=.\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\stm32f10x_crc.crf ..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;106      */
;;;107    uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000000  b510              PUSH     {r4,lr}
;;;108    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;109      uint32_t index = 0;
000006  2100              MOVS     r1,#0
;;;110      
;;;111      for(index = 0; index < BufferLength; index++)
000008  bf00              NOP      
00000a  e004              B        |L1.22|
                  |L1.12|
;;;112      {
;;;113        CRC->DR = pBuffer[index];
00000c  f8520021          LDR      r0,[r2,r1,LSL #2]
000010  4c03              LDR      r4,|L1.32|
000012  6020              STR      r0,[r4,#0]
000014  1c49              ADDS     r1,r1,#1              ;111
                  |L1.22|
000016  4299              CMP      r1,r3                 ;111
000018  d3f8              BCC      |L1.12|
;;;114      }
;;;115      return (CRC->DR);
00001a  4801              LDR      r0,|L1.32|
00001c  6800              LDR      r0,[r0,#0]
;;;116    }
00001e  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  |L1.32|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;93       */
;;;94     uint32_t CRC_CalcCRC(uint32_t Data)
000000  4601              MOV      r1,r0
;;;95     {
;;;96       CRC->DR = Data;
000002  4802              LDR      r0,|L2.12|
000004  6001              STR      r1,[r0,#0]
;;;97       
;;;98       return (CRC->DR);
000006  6800              LDR      r0,[r0,#0]
;;;99     }
000008  4770              BX       lr
;;;100    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;122      */
;;;123    uint32_t CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;124    {
;;;125      return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;126    }
000004  4770              BX       lr
;;;127    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;142      */
;;;143    uint8_t CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;144    {
;;;145      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;146    }
000004  4770              BX       lr
;;;147    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;82       */
;;;83     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;84     {
;;;85       /* Reset CRC generator */
;;;86       CRC->CR = CRC_CR_RESET;
000002  4901              LDR      r1,|L5.8|
000004  6088              STR      r0,[r1,#8]
;;;87     }
000006  4770              BX       lr
;;;88     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;132      */
;;;133    void CRC_SetIDRegister(uint8_t IDValue)
000000  4901              LDR      r1,|L6.8|
;;;134    {
;;;135      CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;136    }
000004  4770              BX       lr
;;;137    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000
