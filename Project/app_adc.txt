; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\app_adc.o --asm_dir=.\ --list_dir=.\ --depend=.\app_adc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\app_adc.crf ..\App\src\app_adc.c]
                          THUMB

                          AREA ||i.App_AdcTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  App_AdcTest PROC
;;;22     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;23     void App_AdcTest(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;24     {
;;;25     	uint16_t usAdcVal = 0;
000004  2400              MOVS     r4,#0
;;;26     	float fTmpVal = 0.0;
000006  46a1              MOV      r9,r4
;;;27     	
;;;28     	usAdcVal = Get_AdcAverage(ADC_Channel_1, 10);
000008  210a              MOVS     r1,#0xa
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       Get_AdcAverage
000010  4604              MOV      r4,r0
;;;29     //	LCD_ShowxNum(156,130,adcx,4,16,0);//显示ADC的值
;;;30     	
;;;31     	//INPUT VOLTAGE = (ADC Value / ADC Resolution) * Reference Voltage
;;;32     	fTmpVal = (float)usAdcVal * (3.3 / 4096);	//12位ADC
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       __aeabi_ui2f
000018  4682              MOV      r10,r0
00001a  f7fffffe          BL       __aeabi_f2d
00001e  4607              MOV      r7,r0
000020  f04f3266          MOV      r2,#0x66666666
000024  4b0a              LDR      r3,|L1.80|
000026  f7fffffe          BL       __aeabi_dmul
00002a  4605              MOV      r5,r0
00002c  f7fffffe          BL       __aeabi_d2f
000030  4681              MOV      r9,r0
;;;33     	printf("voltage is %04fv.\r\n", fTmpVal);
000032  4648              MOV      r0,r9
000034  f7fffffe          BL       __aeabi_f2d
000038  4605              MOV      r5,r0
00003a  462a              MOV      r2,r5
00003c  460b              MOV      r3,r1
00003e  a005              ADR      r0,|L1.84|
000040  f7fffffe          BL       __2printf
;;;34     	
;;;35     //	usAdcVal = fTmpVal;	//整数部分
;;;36     //	printf("Voltage integer of usAdcVal is :%d \r\n", usAdcVal);
;;;37     //	LCD_ShowxNum(156,150,adcx,1,16,0);//显示电压值
;;;38     	
;;;39     //	fTmpVal -= usAdcVal;	//小数部分
;;;40     //	printf("Voltage float of is :%f \r\n",fTmpVal);
;;;41     //	fTmpVal *= 1000;
;;;42     //	LCD_ShowxNum(172, 150, fTmpVal, 3, 16, 0X80);
;;;43     	
;;;44     	delay_ms(250);	
000044  20fa              MOVS     r0,#0xfa
000046  f7fffffe          BL       delay_ms
;;;45     }
00004a  e8bd87f0          POP      {r4-r10,pc}
;;;46     
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      0x3f4a6666
                  |L1.84|
000054  766f6c74          DCB      "voltage is %04fv.\r\n",0
000058  61676520
00005c  69732025
000060  30346676
000064  2e0d0a00
