; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\main.o --asm_dir=.\ --list_dir=.\ --depend=.\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\main.crf ..\User\src\Main.c]
                          THUMB

                          AREA ||i.Hardware_AllInit||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  Hardware_AllInit PROC
;;;45     
;;;46     void Hardware_AllInit(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48     	
;;;49     	Bsp_LedInit();
000002  f7fffffe          BL       Bsp_LedInit
;;;50     	
;;;51     
;;;52     	
;;;53     	
;;;54     	
;;;55     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);	// 设置中断优先级分组2
000006  f44f60a0          MOV      r0,#0x500
00000a  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;56     	delay_init();	    	 		//延时函数初始化	  
00000e  f7fffffe          BL       delay_init
;;;57     			  			//初始化与LED连接的硬件接口
;;;58     //	Usart_Init(USART1, 9600);		//串口1初始化,用于调试信息输出
;;;59     	uart_init(1, 9600);
000012  f44f5116          MOV      r1,#0x2580
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       uart_init
;;;60     //	printf (" \r\n mcu enter main \r\n");
;;;61     	
;;;62     //	stack_test();
;;;63     //	heap_test();
;;;64     //	pack_test();
;;;65     //	macro_define_test();
;;;66     //	cpu_mem_endian();
;;;67     	
;;;68     	
;;;69     #ifdef ADC_FUNC_TEST
;;;70     	Adc_Init();
;;;71     	App_AdcTest();
;;;72     	
;;;73     #endif	//ADC_FUNC_TEST
;;;74     	
;;;75     #ifdef TIMER_FUNC_TEST
;;;76     	timer_init(3);
;;;77     #endif
;;;78     
;;;79     #ifdef EXTI_FUNC_TEST
;;;80     	exti_init(0);
00001c  2000              MOVS     r0,#0
00001e  f7fffffe          BL       exti_init
;;;81     #endif	//EXTI_FUNC_TEST
;;;82     
;;;83     #if SPI_COMM_MODE
;;;84     	#ifdef HARD_SPI_COMM
;;;85     	spi_master_init(1);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       spi_master_init
;;;86     	#ifdef OLED_FUNC_TEST
;;;87     	oled_init();
000028  f7fffffe          BL       oled_init
;;;88     	oled_dis_logo();
00002c  f7fffffe          BL       oled_dis_logo
;;;89     //	oled_dis_picture(0, 0, 128, 7, bmp_buff);
;;;90     //	oled_dis_num(60, 4, 1314, 4, 16);
;;;91     //	oled_dis_one_char(5, 2, 'A');
;;;92     //	oled_dis_one_char(12, 2, 'B');
;;;93     //	oled_dis_one_char(129, 2, 'B');
;;;94     //	oled_dis_chinese(33,1,0);
;;;95     //	oled_dis_chinese(53,1,1);
;;;96     //	oled_dis_chinese(73,1,2);
;;;97     //	oled_dis_chinese(93,1,3);
;;;98     //	oled_dis_chinese(33,5,4);
;;;99     //	oled_dis_chinese(53,5,5);
;;;100    //	oled_dis_chinese(73,5,6);
;;;101    //	oled_dis_chinese(50, 3, 8);
;;;102    //	oled_dis_chinese(80, 3, 9);
;;;103    	#endif
;;;104    	Flash_TestDataInit();
000030  f7fffffe          BL       Flash_TestDataInit
;;;105    	ulFlashIdVal = spi_flash_read_id();
000034  f7fffffe          BL       spi_flash_read_id
000038  4908              LDR      r1,|L1.92|
00003a  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;106    	printf("Hard --1 spi flash val is 0x%0X \r\n", ulFlashIdVal);
00003c  4608              MOV      r0,r1
00003e  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
000040  a007              ADR      r0,|L1.96|
000042  f7fffffe          BL       __2printf
;;;107    	ulFlashIdVal = spi_flash_read_id();
000046  f7fffffe          BL       spi_flash_read_id
00004a  4904              LDR      r1,|L1.92|
00004c  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;108    	printf("Hard --2 Spi flash val is 0x%0X \r\n", ulFlashIdVal);
00004e  4608              MOV      r0,r1
000050  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
000052  a00c              ADR      r0,|L1.132|
000054  f7fffffe          BL       __2printf
;;;109    	#endif	//HARD_SPI_COMM
;;;110    #else
;;;111    	#ifdef SOFT_SPI_COMM
;;;112    	Spi_GpioInit();
;;;113    	Flash_TestDataInit();
;;;114    	
;;;115    	ulFlashIdVal = Flash_ReadJEDECID();
;;;116    	printf("Spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;117    	
;;;118    //	W25_WriteReadBytes();
;;;119    //	W25_CircleWriteRead(0x01, 0x00, g_WriteData, g_DataTmpBuffer, 256);	//flash循环读写测试
;;;120    	#endif	//SOFT_SPI_COMM
;;;121    #endif	//SPI_COMM_MODE	
;;;122    
;;;123    #ifdef I2C_HTU_TEST
;;;124    	Htu_Init();
;;;125    	ee_at24cxx_init();
;;;126    #endif
;;;127    }
000058  bd10              POP      {r4,pc}
;;;128    
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      ulFlashIdVal
                  |L1.96|
000060  48617264          DCB      "Hard --1 spi flash val is 0x%0X \r\n",0
000064  202d2d31
000068  20737069
00006c  20666c61
000070  73682076
000074  616c2069
000078  73203078
00007c  25305820
000080  0d0a00  
000083  00                DCB      0
                  |L1.132|
000084  48617264          DCB      "Hard --2 Spi flash val is 0x%0X \r\n",0
000088  202d2d32
00008c  20537069
000090  20666c61
000094  73682076
000098  616c2069
00009c  73203078
0000a0  25305820
0000a4  0d0a00  
0000a7  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  main PROC
;;;151    
;;;152    int main(void)
000000  f7fffffe          BL       Hardware_AllInit
;;;153    {	
;;;154    	Hardware_AllInit();
;;;155    	
;;;156    #ifdef DEBUG_ENABLE
;;;157    	printk("Using Usart1 Output Debuging Infomation\r\n");
000004  a013              ADR      r0,|L2.84|
000006  f7fffffe          BL       __2printf
;;;158    #endif
;;;159    	
;;;160    	while(1)
00000a  e021              B        |L2.80|
                  |L2.12|
;;;161    	{
;;;162    		Sys_DelayUs(1000);
00000c  f44f707a          MOV      r0,#0x3e8
000010  f7fffffe          BL       Sys_DelayUs
;;;163    		Sys_DelayUs(1000);
000014  f44f707a          MOV      r0,#0x3e8
000018  f7fffffe          BL       Sys_DelayUs
;;;164    		Sys_DelayUs(1000);
00001c  f44f707a          MOV      r0,#0x3e8
000020  f7fffffe          BL       Sys_DelayUs
;;;165    		Sys_DelayUs(1000);
000024  f44f707a          MOV      r0,#0x3e8
000028  f7fffffe          BL       Sys_DelayUs
;;;166    //		Bsp_LedTest(500);
;;;167    		
;;;168    	#ifdef ADC_FUNC_TEST
;;;169    		Adc_Init();
;;;170    		App_AdcTest();
;;;171    		
;;;172    	#endif	//ADC_FUNC_TEST
;;;173    
;;;174    #if SPI_COMM_MODE		
;;;175    	#ifdef 	HARD_SPI_COMM
;;;176    		ulFlashIdVal = Flash_ReadJEDECID();
00002c  f7fffffe          BL       Flash_ReadJEDECID
000030  4913              LDR      r1,|L2.128|
000032  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;177    		printf(" hard spi flash val is 0x%0X \r\n", ulFlashIdVal);
000034  4608              MOV      r0,r1
000036  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
000038  a012              ADR      r0,|L2.132|
00003a  f7fffffe          BL       __2printf
;;;178    		W25_WriteReadBytes();
00003e  f7fffffe          BL       W25_WriteReadBytes
;;;179    
;;;180    	#endif	//HARD_SPI_COMM	
;;;181    #else	
;;;182    	#ifdef SOFT_SPI_COMM	
;;;183    		ulFlashIdVal = Flash_ReadJEDECID();
;;;184    		printf(" soft spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;185    		W25_WriteReadBytes();
;;;186    	#endif	//SOFT_SPI_COM
;;;187    	
;;;188    #endif	//SPI_COMM_MODE
;;;189    
;;;190    #ifdef I2C_HTU_TEST
;;;191    	Htu_Display();
;;;192    	ee_at24cxx_test();
;;;193    #endif
;;;194    
;;;195    #ifdef UART_FUNC_TEST
;;;196    //	uart_test();
;;;197    #endif
;;;198    
;;;199    #ifdef TIMER_FUNC_TEST
;;;200    	timer_test();
;;;201    #endif
;;;202    
;;;203    	printf("Main is ruinning\r\n");
000042  a018              ADR      r0,|L2.164|
000044  f7fffffe          BL       __2printf
;;;204    //	Bsp_LedTest(300);
;;;205    //	sprintf_test();	
;;;206    //	strcpy_test();
;;;207    //	memcmp_test();
;;;208    //  strcmp_test();
;;;209    
;;;210    		delay_ms(500);
000048  f44f70fa          MOV      r0,#0x1f4
00004c  f7fffffe          BL       delay_ms
                  |L2.80|
000050  e7dc              B        |L2.12|
;;;211    		
;;;212    //	if (USART_RX_STA)
;;;213    //	{
;;;214    //		printf("mcu will soft reset\r\n");
;;;215    //		NVIC_SystemReset();
;;;216    //		printf("mcu reset ok\r\n");
;;;217    //	}
;;;218    		
;;;219    	}
;;;220    }
;;;221    
                          ENDP

000052  0000              DCW      0x0000
                  |L2.84|
000054  5573696e          DCB      "Using Usart1 Output Debuging Infomation\r\n",0
000058  67205573
00005c  61727431
000060  204f7574
000064  70757420
000068  44656275
00006c  67696e67
000070  20496e66
000074  6f6d6174
000078  696f6e0d
00007c  0a00    
00007e  00                DCB      0
00007f  00                DCB      0
                  |L2.128|
                          DCD      ulFlashIdVal
                  |L2.132|
000084  20686172          DCB      " hard spi flash val is 0x%0X \r\n",0
000088  64207370
00008c  6920666c
000090  61736820
000094  76616c20
000098  69732030
00009c  78253058
0000a0  200d0a00
                  |L2.164|
0000a4  4d61696e          DCB      "Main is ruinning\r\n",0
0000a8  20697320
0000ac  7275696e
0000b0  6e696e67
0000b4  0d0a00  
0000b7  00                DCB      0

                          AREA ||i.main_hcr||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main_hcr PROC
;;;129    //超声波测试函数
;;;130    int main_hcr(void)
000000  f7fffffe          BL       delay_init
;;;131    {
;;;132    	delay_init();	    	 //延时函数初始化	
;;;133    	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);// 设置中断优先级分组2
000004  f44f60a0          MOV      r0,#0x500
000008  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;134    	uart_init(1, 115200 * 8);	 //串口初始化为961200
00000c  f44f2161          MOV      r1,#0xe1000
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       uart_init
;;;135    	Bsp_LedInit();		  	 //初始化与LED连接的硬件接口 
000016  f7fffffe          BL       Bsp_LedInit
;;;136    	
;;;137    	timer4_cap_init(0Xffff, 72 - 1);
00001a  2147              MOVS     r1,#0x47
00001c  f64f70ff          MOV      r0,#0xffff
000020  f7fffffe          BL       timer4_cap_init
;;;138    	
;;;139    	while (1)
000024  e015              B        |L3.82|
                  |L3.38|
;;;140    	{
;;;141    		hcsr04_read_distance();
000026  f7fffffe          BL       hcsr04_read_distance
;;;142    		delay_ms(500);
00002a  f44f70fa          MOV      r0,#0x1f4
00002e  f7fffffe          BL       delay_ms
;;;143    		LED0 = 1;
000032  2001              MOVS     r0,#1
000034  4907              LDR      r1,|L3.84|
000036  6008              STR      r0,[r1,#0]
;;;144    		delay_ms(500);
000038  f44f70fa          MOV      r0,#0x1f4
00003c  f7fffffe          BL       delay_ms
;;;145    		LED0 = 0;
000040  2000              MOVS     r0,#0
000042  4905              LDR      r1,|L3.88|
000044  f8c101a0          STR      r0,[r1,#0x1a0]
;;;146    		
;;;147    		printf("g_cap_distance = %d \r\n", g_cap_distance);	//用串口1打印输出
000048  4804              LDR      r0,|L3.92|
00004a  6801              LDR      r1,[r0,#0]  ; g_cap_distance
00004c  a004              ADR      r0,|L3.96|
00004e  f7fffffe          BL       __2printf
                  |L3.82|
000052  e7e8              B        |L3.38|
;;;148    	}
;;;149    }
;;;150    
                          ENDP

                  |L3.84|
                          DCD      0x422101a0
                  |L3.88|
                          DCD      0x42210000
                  |L3.92|
                          DCD      g_cap_distance
                  |L3.96|
000060  675f6361          DCB      "g_cap_distance = %d \r\n",0
000064  705f6469
000068  7374616e
00006c  6365203d
000070  20256420
000074  0d0a00  
000077  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  ulFlashIdVal
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
