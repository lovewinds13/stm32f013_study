; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\drvexti.o --asm_dir=.\ --list_dir=.\ --depend=.\drvexti.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\drvexti.crf ..\Driver\src\drvexti.c]
                          THUMB

                          AREA ||i.EXTI0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI0_IRQHandler PROC
;;;105    //---------------------------------------------------------------------------------------------------------------------------------------------
;;;106    void EXTI0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;107    {
;;;108    	if (EXTI_GetITStatus(EXTI_Line0) != RESET)  
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       EXTI_GetITStatus
000008  b1e0              CBZ      r0,|L1.68|
;;;109    	{
;;;110    		g_exti_cnt++;
00000a  480f              LDR      r0,|L1.72|
00000c  7800              LDRB     r0,[r0,#0]  ; g_exti_cnt
00000e  1c40              ADDS     r0,r0,#1
000010  490d              LDR      r1,|L1.72|
000012  7008              STRB     r0,[r1,#0]
;;;111    		
;;;112    		if (g_exti_cnt % 2)
000014  7808              LDRB     r0,[r1,#0]  ; g_exti_cnt
000016  eb0071d0          ADD      r1,r0,r0,LSR #31
00001a  1049              ASRS     r1,r1,#1
00001c  eba00141          SUB      r1,r0,r1,LSL #1
000020  b119              CBZ      r1,|L1.42|
;;;113    		{
;;;114    			Bsp_LedOn(0);	//点亮OLED0
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       Bsp_LedOn
000028  e002              B        |L1.48|
                  |L1.42|
;;;115    		}
;;;116    		else 
;;;117    		{
;;;118    			Bsp_LedOff(0);	//熄灭OLED0
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       Bsp_LedOff
                  |L1.48|
;;;119    		}
;;;120    		
;;;121    		if (g_exti_cnt > 200)
000030  4805              LDR      r0,|L1.72|
000032  7800              LDRB     r0,[r0,#0]  ; g_exti_cnt
000034  28c8              CMP      r0,#0xc8
000036  dd02              BLE      |L1.62|
;;;122    		{
;;;123    			g_exti_cnt = 0;
000038  2000              MOVS     r0,#0
00003a  4903              LDR      r1,|L1.72|
00003c  7008              STRB     r0,[r1,#0]
                  |L1.62|
;;;124    		}
;;;125    		
;;;126    		EXTI_ClearITPendingBit(EXTI_Line0);	//清除EXTI0线路挂起
00003e  2001              MOVS     r0,#1
000040  f7fffffe          BL       EXTI_ClearITPendingBit
                  |L1.68|
;;;127    	}
;;;128    }
000044  bd10              POP      {r4,pc}
;;;129    
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      g_exti_cnt

                          AREA ||i.exti_config||, CODE, READONLY, ALIGN=1

                  exti_config PROC
;;;40     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;41     static void exti_config(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;42     {
;;;43     	EXTI_InitTypeDef exti_init_config;
;;;44     	
;;;45     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);	//外部中断，需要使能AFIO时钟
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;46     	
;;;47     	GPIO_EXTILineConfig(GPIO_PortSourceGPIOA, GPIO_PinSource0);	//PA0设置为外部中断
00000a  2100              MOVS     r1,#0
00000c  4608              MOV      r0,r1
00000e  f7fffffe          BL       GPIO_EXTILineConfig
;;;48     	
;;;49     	exti_init_config.EXTI_Line		= EXTI_Line0;
000012  2001              MOVS     r0,#1
000014  9000              STR      r0,[sp,#0]
;;;50       	exti_init_config.EXTI_Mode 		= EXTI_Mode_Interrupt;	
000016  2000              MOVS     r0,#0
000018  f88d0004          STRB     r0,[sp,#4]
;;;51       	exti_init_config.EXTI_Trigger 	= EXTI_Trigger_Rising;//上升沿触发
00001c  2008              MOVS     r0,#8
00001e  f88d0005          STRB     r0,[sp,#5]
;;;52       	exti_init_config.EXTI_LineCmd 	= ENABLE;
000022  2001              MOVS     r0,#1
000024  f88d0006          STRB     r0,[sp,#6]
;;;53       	
;;;54     	EXTI_Init(&exti_init_config);	 	//根据EXTI_InitTypeDef中指定的参数初始化外设EXTI寄存器
000028  4668              MOV      r0,sp
00002a  f7fffffe          BL       EXTI_Init
;;;55     }
00002e  bd1c              POP      {r2-r4,pc}
;;;56     
                          ENDP


                          AREA ||i.exti_gpio_config||, CODE, READONLY, ALIGN=2

                  exti_gpio_config PROC
;;;20     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;21     static void exti_gpio_config(void)
000000  b508              PUSH     {r3,lr}
;;;22     {
;;;23     	GPIO_InitTypeDef gpio_init_config;
;;;24     
;;;25      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);//使能PORTA时钟
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;26     	
;;;27     	gpio_init_config.GPIO_Pin  		= GPIO_Pin_0;//PA0
00000a  2001              MOVS     r0,#1
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;28     	gpio_init_config.GPIO_Mode 		= GPIO_Mode_IPD; //PA0设置成输入，默认下拉	  
000010  2028              MOVS     r0,#0x28
000012  f88d0003          STRB     r0,[sp,#3]
;;;29     	GPIO_Init(GPIOA, &gpio_init_config);//初始化GPIOA.0
000016  4669              MOV      r1,sp
000018  4801              LDR      r0,|L3.32|
00001a  f7fffffe          BL       GPIO_Init
;;;30     }
00001e  bd08              POP      {r3,pc}
;;;31     
                          ENDP

                  |L3.32|
                          DCD      0x40010800

                          AREA ||i.exti_init||, CODE, READONLY, ALIGN=1

                  exti_init PROC
;;;86     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;87     void exti_init(uint8_t exti_no)
000000  b510              PUSH     {r4,lr}
;;;88     {
000002  4604              MOV      r4,r0
;;;89     	if (exti_no == 0)
000004  b92c              CBNZ     r4,|L4.18|
;;;90     	{
;;;91     		exti_gpio_config();
000006  f7fffffe          BL       exti_gpio_config
;;;92     		exti_config();
00000a  f7fffffe          BL       exti_config
;;;93     		exti_nvic_config();
00000e  f7fffffe          BL       exti_nvic_config
                  |L4.18|
;;;94     	}
;;;95     }
000012  bd10              POP      {r4,pc}
;;;96     
                          ENDP


                          AREA ||i.exti_nvic_config||, CODE, READONLY, ALIGN=1

                  exti_nvic_config PROC
;;;65     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;66     static void exti_nvic_config(void)
000000  b508              PUSH     {r3,lr}
;;;67     {
;;;68     	NVIC_InitTypeDef nvic_init_config;
;;;69     	
;;;70     	nvic_init_config.NVIC_IRQChannel 					= EXTI0_IRQn;//使能按键所在的外部中断通道
000002  2006              MOVS     r0,#6
000004  f88d0000          STRB     r0,[sp,#0]
;;;71     	nvic_init_config.NVIC_IRQChannelPreemptionPriority 	= 0x02;//抢占优先级2
000008  2002              MOVS     r0,#2
00000a  f88d0001          STRB     r0,[sp,#1]
;;;72     	nvic_init_config.NVIC_IRQChannelSubPriority 		= 0x02;//子优先级1
00000e  f88d0002          STRB     r0,[sp,#2]
;;;73     	nvic_init_config.NVIC_IRQChannelCmd 				= ENABLE;
000012  2001              MOVS     r0,#1
000014  f88d0003          STRB     r0,[sp,#3]
;;;74     	
;;;75     	NVIC_Init(&nvic_init_config);
000018  4668              MOV      r0,sp
00001a  f7fffffe          BL       NVIC_Init
;;;76     }
00001e  bd08              POP      {r3,pc}
;;;77     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  g_exti_cnt
000000  00                DCB      0x00
