; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\drvsfi2c.o --asm_dir=.\ --list_dir=.\ --depend=.\drvsfi2c.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\drvsfi2c.crf ..\Driver\src\drvsfi2c.c]
                          THUMB

                          AREA ||i.I2C_SDASetInput||, CODE, READONLY, ALIGN=2

                  I2C_SDASetInput PROC
;;;67     //--------------------------------------------------------------------------------------------------------
;;;68     void I2C_SDASetInput(void)
000000  b508              PUSH     {r3,lr}
;;;69     {
;;;70     	GPIO_InitTypeDef gpio_config_init;
;;;71     	
;;;72     	gpio_config_init.GPIO_Pin 	= I2C_SDA_IO;
000002  f44f6000          MOV      r0,#0x800
000006  f8ad0000          STRH     r0,[sp,#0]
;;;73     	gpio_config_init.GPIO_Speed = GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;74     	gpio_config_init.GPIO_Mode 	= GPIO_Mode_IN_FLOATING;	//浮空输入
000010  2004              MOVS     r0,#4
000012  f88d0003          STRB     r0,[sp,#3]
;;;75     	GPIO_Init(PORT_I2C_SDA, &gpio_config_init);
000016  4669              MOV      r1,sp
000018  4801              LDR      r0,|L1.32|
00001a  f7fffffe          BL       GPIO_Init
;;;76     }
00001e  bd08              POP      {r3,pc}
;;;77     
                          ENDP

                  |L1.32|
                          DCD      0x40011000

                          AREA ||i.I2C_SDASetOutput||, CODE, READONLY, ALIGN=2

                  I2C_SDASetOutput PROC
;;;85     //--------------------------------------------------------------------------------------------------------
;;;86     void I2C_SDASetOutput(void)
000000  b508              PUSH     {r3,lr}
;;;87     {
;;;88     	GPIO_InitTypeDef gpio_config_init;
;;;89     	
;;;90     	gpio_config_init.GPIO_Pin = I2C_SDA_IO;
000002  f44f6000          MOV      r0,#0x800
000006  f8ad0000          STRH     r0,[sp,#0]
;;;91     	gpio_config_init.GPIO_Speed = GPIO_Speed_2MHz;
00000a  2002              MOVS     r0,#2
00000c  f88d0002          STRB     r0,[sp,#2]
;;;92     	gpio_config_init.GPIO_Mode = GPIO_Mode_Out_OD;	//开漏输出
000010  2014              MOVS     r0,#0x14
000012  f88d0003          STRB     r0,[sp,#3]
;;;93     	GPIO_Init(PORT_I2C_SDA, &gpio_config_init);
000016  4669              MOV      r1,sp
000018  4801              LDR      r0,|L2.32|
00001a  f7fffffe          BL       GPIO_Init
;;;94     }
00001e  bd08              POP      {r3,pc}
;;;95     
                          ENDP

                  |L2.32|
                          DCD      0x40011000

                          AREA ||i.I2c_CommSpeedSet||, CODE, READONLY, ALIGN=2

                  I2c_CommSpeedSet PROC
;;;103    //--------------------------------------------------------------------------------------------------------
;;;104    void I2c_CommSpeedSet(uint16_t _usSpeed)
000000  4901              LDR      r1,|L3.8|
;;;105    {
;;;106    	StI2cInfo.uiI2cSpeed = _usSpeed;
000002  8008              STRH     r0,[r1,#0]
;;;107    }
000004  4770              BX       lr
;;;108    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      StI2cInfo

                          AREA ||i.I2c_Delay||, CODE, READONLY, ALIGN=1

                  I2c_Delay PROC
;;;130    //--------------------------------------------------------------------------------------------------------
;;;131    void I2c_Delay(uint16_t _usTime)
000000  b510              PUSH     {r4,lr}
;;;132    {
000002  4604              MOV      r4,r0
;;;133    	Sys_delay_us(_usTime);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       Sys_delay_us
;;;134    }
00000a  bd10              POP      {r4,pc}
;;;135    	
                          ENDP


                          AREA ||i.I2c_GetAck||, CODE, READONLY, ALIGN=2

                  I2c_GetAck PROC
;;;340    //--------------------------------------------------------------------------------------------------------
;;;341    void I2c_GetAck(void)
000000  b510              PUSH     {r4,lr}
;;;342    {
;;;343    	I2C_SCL_0();
000002  f44f5180          MOV      r1,#0x1000
000006  4815              LDR      r0,|L5.92|
000008  f7fffffe          BL       GPIO_ResetBits
;;;344    	I2c_Delay(StI2cInfo.uiI2cSpeed);
00000c  4914              LDR      r1,|L5.96|
00000e  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000010  f7fffffe          BL       I2c_Delay
;;;345    	I2C_SDASetOutput();
000014  f7fffffe          BL       I2C_SDASetOutput
;;;346    	I2C_SDA_0();	//第九个时钟,SDA为低应答
000018  f44f6100          MOV      r1,#0x800
00001c  480f              LDR      r0,|L5.92|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;347    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000022  490f              LDR      r1,|L5.96|
000024  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000026  f7fffffe          BL       I2c_Delay
;;;348    	I2C_SCL_1();		//SCL高电平,高电平时读取SDA的数据
00002a  f44f5180          MOV      r1,#0x1000
00002e  480b              LDR      r0,|L5.92|
000030  f7fffffe          BL       GPIO_SetBits
;;;349    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000034  490a              LDR      r1,|L5.96|
000036  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000038  f7fffffe          BL       I2c_Delay
;;;350    	I2C_SCL_0();
00003c  f44f5180          MOV      r1,#0x1000
000040  4806              LDR      r0,|L5.92|
000042  f7fffffe          BL       GPIO_ResetBits
;;;351    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000046  4906              LDR      r1,|L5.96|
000048  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00004a  f7fffffe          BL       I2c_Delay
;;;352    	I2C_SDA_1();		//释放SDA
00004e  f44f6100          MOV      r1,#0x800
000052  4802              LDR      r0,|L5.92|
000054  f7fffffe          BL       GPIO_SetBits
;;;353    }
000058  bd10              POP      {r4,pc}
;;;354    
                          ENDP

00005a  0000              DCW      0x0000
                  |L5.92|
                          DCD      0x40011000
                  |L5.96|
                          DCD      StI2cInfo

                          AREA ||i.I2c_GetNack||, CODE, READONLY, ALIGN=2

                  I2c_GetNack PROC
;;;362    //--------------------------------------------------------------------------------------------------------
;;;363    void I2c_GetNack(void)
000000  b510              PUSH     {r4,lr}
;;;364    {
;;;365    	I2C_SCL_0();
000002  f44f5180          MOV      r1,#0x1000
000006  4812              LDR      r0,|L6.80|
000008  f7fffffe          BL       GPIO_ResetBits
;;;366    	I2c_Delay(StI2cInfo.uiI2cSpeed);
00000c  4911              LDR      r1,|L6.84|
00000e  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000010  f7fffffe          BL       I2c_Delay
;;;367    	I2C_SDASetOutput();
000014  f7fffffe          BL       I2C_SDASetOutput
;;;368    	I2C_SDA_1();	//第九个时钟,SDA为高非应答
000018  f44f6100          MOV      r1,#0x800
00001c  480c              LDR      r0,|L6.80|
00001e  f7fffffe          BL       GPIO_SetBits
;;;369    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000022  490c              LDR      r1,|L6.84|
000024  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000026  f7fffffe          BL       I2c_Delay
;;;370    	I2C_SCL_1();		//SCCL高电平,高电平时读取SDA的数据
00002a  f44f5180          MOV      r1,#0x1000
00002e  4808              LDR      r0,|L6.80|
000030  f7fffffe          BL       GPIO_SetBits
;;;371    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000034  4907              LDR      r1,|L6.84|
000036  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000038  f7fffffe          BL       I2c_Delay
;;;372    	I2C_SCL_0();
00003c  f44f5180          MOV      r1,#0x1000
000040  4803              LDR      r0,|L6.80|
000042  f7fffffe          BL       GPIO_ResetBits
;;;373    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000046  4903              LDR      r1,|L6.84|
000048  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00004a  f7fffffe          BL       I2c_Delay
;;;374    }
00004e  bd10              POP      {r4,pc}
;;;375    
                          ENDP

                  |L6.80|
                          DCD      0x40011000
                  |L6.84|
                          DCD      StI2cInfo

                          AREA ||i.I2c_GpioInit||, CODE, READONLY, ALIGN=2

                  I2c_GpioInit PROC
;;;46     //--------------------------------------------------------------------------------------------------------
;;;47     void I2c_GpioInit(void)
000000  b508              PUSH     {r3,lr}
;;;48     {
;;;49     	GPIO_InitTypeDef gpio_config_init;
;;;50     	
;;;51     	RCC_APB2PeriphClockCmd(RCC_PCLK_I2C_GPIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;52     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable , ENABLE);//开启SWD，失能JTAG
00000a  2101              MOVS     r1,#1
00000c  4808              LDR      r0,|L7.48|
00000e  f7fffffe          BL       GPIO_PinRemapConfig
;;;53     	
;;;54     	gpio_config_init.GPIO_Pin 	= I2C_SCL_IO | I2C_SDA_IO;
000012  f44f50c0          MOV      r0,#0x1800
000016  f8ad0000          STRH     r0,[sp,#0]
;;;55     	gpio_config_init.GPIO_Speed = GPIO_Speed_2MHz;
00001a  2002              MOVS     r0,#2
00001c  f88d0002          STRB     r0,[sp,#2]
;;;56     	gpio_config_init.GPIO_Mode 	= GPIO_Mode_Out_OD;
000020  2014              MOVS     r0,#0x14
000022  f88d0003          STRB     r0,[sp,#3]
;;;57     	GPIO_Init(PORT_I2C_SCL, &gpio_config_init);
000026  4669              MOV      r1,sp
000028  4802              LDR      r0,|L7.52|
00002a  f7fffffe          BL       GPIO_Init
;;;58     }
00002e  bd08              POP      {r3,pc}
;;;59     
                          ENDP

                  |L7.48|
                          DCD      0x00300200
                  |L7.52|
                          DCD      0x40011000

                          AREA ||i.I2c_Init||, CODE, READONLY, ALIGN=1

                  I2c_Init PROC
;;;116    //--------------------------------------------------------------------------------------------------------
;;;117    void I2c_Init(void)
000000  b510              PUSH     {r4,lr}
;;;118    {
;;;119    	I2c_GpioInit();
000002  f7fffffe          BL       I2c_GpioInit
;;;120    	I2c_CommSpeedSet(4);
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       I2c_CommSpeedSet
;;;121    }
00000c  bd10              POP      {r4,pc}
;;;122    
                          ENDP


                          AREA ||i.I2c_RecvOneByte||, CODE, READONLY, ALIGN=2

                  I2c_RecvOneByte PROC
;;;220    //--------------------------------------------------------------------------------------------------------
;;;221    uint8_t I2c_RecvOneByte(uint8_t _ucAck)
000000  b570              PUSH     {r4-r6,lr}
;;;222    {
000002  4605              MOV      r5,r0
;;;223    	uint8_t ucCnt = 0, ucData = 0;
000004  2600              MOVS     r6,#0
000006  2400              MOVS     r4,#0
;;;224    	
;;;225    	I2C_SCL_0();
000008  f44f5180          MOV      r1,#0x1000
00000c  481e              LDR      r0,|L9.136|
00000e  f7fffffe          BL       GPIO_ResetBits
;;;226    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000012  491e              LDR      r1,|L9.140|
000014  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000016  f7fffffe          BL       I2c_Delay
;;;227    	
;;;228    	I2C_SDA_1();
00001a  f44f6100          MOV      r1,#0x800
00001e  481a              LDR      r0,|L9.136|
000020  f7fffffe          BL       GPIO_SetBits
;;;229    	
;;;230    	I2C_SDASetInput();		//切换SDA传输方向
000024  f7fffffe          BL       I2C_SDASetInput
;;;231    	
;;;232    	for(ucCnt = 0; ucCnt < 8; ucCnt++)
000028  bf00              NOP      
00002a  e020              B        |L9.110|
                  |L9.44|
;;;233    	{
;;;234    		I2C_SCL_1();		//SCL高电平时SDA上的数据达到稳定
00002c  f44f5180          MOV      r1,#0x1000
000030  4815              LDR      r0,|L9.136|
000032  f7fffffe          BL       GPIO_SetBits
;;;235    		I2c_Delay(StI2cInfo.uiI2cSpeed);		//延时等待信号稳定
000036  4915              LDR      r1,|L9.140|
000038  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00003a  f7fffffe          BL       I2c_Delay
;;;236    		
;;;237    		ucData <<= 1;
00003e  0660              LSLS     r0,r4,#25
000040  0e04              LSRS     r4,r0,#24
;;;238    		if(I2C_SDA_READ)
000042  f44f6100          MOV      r1,#0x800
000046  4810              LDR      r0,|L9.136|
000048  f7fffffe          BL       GPIO_ReadInputDataBit
00004c  b110              CBZ      r0,|L9.84|
;;;239    		{
;;;240    			ucData |= 0x01;
00004e  f0440401          ORR      r4,r4,#1
000052  e001              B        |L9.88|
                  |L9.84|
;;;241    		}
;;;242    		else
;;;243    		{
;;;244    			ucData &= 0xfe;		
000054  f00404fe          AND      r4,r4,#0xfe
                  |L9.88|
;;;245    		}
;;;246    		I2C_SCL_0();		//允许数据改变
000058  f44f5180          MOV      r1,#0x1000
00005c  480a              LDR      r0,|L9.136|
00005e  f7fffffe          BL       GPIO_ResetBits
;;;247    		I2c_Delay(StI2cInfo.uiI2cSpeed);
000062  490a              LDR      r1,|L9.140|
000064  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000066  f7fffffe          BL       I2c_Delay
00006a  1c70              ADDS     r0,r6,#1              ;232
00006c  b2c6              UXTB     r6,r0                 ;232
                  |L9.110|
00006e  2e08              CMP      r6,#8                 ;232
000070  dbdc              BLT      |L9.44|
;;;248    	}
;;;249    	I2C_SDASetOutput();
000072  f7fffffe          BL       I2C_SDASetOutput
;;;250    	if(_ucAck)
000076  b115              CBZ      r5,|L9.126|
;;;251    	{
;;;252    		I2c_GetNack();
000078  f7fffffe          BL       I2c_GetNack
00007c  e001              B        |L9.130|
                  |L9.126|
;;;253    	}
;;;254    	else
;;;255    	{
;;;256    		I2c_GetAck();
00007e  f7fffffe          BL       I2c_GetAck
                  |L9.130|
;;;257    	}
;;;258    	
;;;259    	return ucData;
000082  4620              MOV      r0,r4
;;;260    }
000084  bd70              POP      {r4-r6,pc}
;;;261    
                          ENDP

000086  0000              DCW      0x0000
                  |L9.136|
                          DCD      0x40011000
                  |L9.140|
                          DCD      StI2cInfo

                          AREA ||i.I2c_SendOneByte||, CODE, READONLY, ALIGN=2

                  I2c_SendOneByte PROC
;;;182    //--------------------------------------------------------------------------------------------------------
;;;183    void I2c_SendOneByte(uint8_t _ucData)
000000  b570              PUSH     {r4-r6,lr}
;;;184    {
000002  4604              MOV      r4,r0
;;;185    	uint8_t ucCnt = 0;
000004  2500              MOVS     r5,#0
;;;186    	
;;;187    	I2C_SDASetOutput();	//SDA设置为输出(若IO为开漏,无需进行方向切换)
000006  f7fffffe          BL       I2C_SDASetOutput
;;;188    	for(ucCnt = 0; ucCnt < 8; ucCnt++)
00000a  bf00              NOP      
00000c  e027              B        |L10.94|
                  |L10.14|
;;;189    	{
;;;190    		I2C_SCL_0();		//SCL低电平,允许数据改变
00000e  f44f5180          MOV      r1,#0x1000
000012  4819              LDR      r0,|L10.120|
000014  f7fffffe          BL       GPIO_ResetBits
;;;191    		I2c_Delay(StI2cInfo.uiI2cSpeed);
000018  4918              LDR      r1,|L10.124|
00001a  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00001c  f7fffffe          BL       I2c_Delay
;;;192    		
;;;193    		if(_ucData & 0x80)		//从高位开始传输
000020  f0040080          AND      r0,r4,#0x80
000024  b128              CBZ      r0,|L10.50|
;;;194    		{
;;;195    			I2C_SDA_1();		
000026  f44f6100          MOV      r1,#0x800
00002a  4813              LDR      r0,|L10.120|
00002c  f7fffffe          BL       GPIO_SetBits
000030  e004              B        |L10.60|
                  |L10.50|
;;;196    		}
;;;197    		else
;;;198    		{
;;;199    			I2C_SDA_0();		
000032  f44f6100          MOV      r1,#0x800
000036  4810              LDR      r0,|L10.120|
000038  f7fffffe          BL       GPIO_ResetBits
                  |L10.60|
;;;200    		}
;;;201    		
;;;202    		_ucData <<= 1;
00003c  0660              LSLS     r0,r4,#25
00003e  0e04              LSRS     r4,r0,#24
;;;203    		I2c_Delay(StI2cInfo.uiI2cSpeed);
000040  490e              LDR      r1,|L10.124|
000042  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000044  f7fffffe          BL       I2c_Delay
;;;204    		
;;;205    		I2C_SCL_1();		//数据稳定,发送给从机
000048  f44f5180          MOV      r1,#0x1000
00004c  480a              LDR      r0,|L10.120|
00004e  f7fffffe          BL       GPIO_SetBits
;;;206    		I2c_Delay(StI2cInfo.uiI2cSpeed);
000052  490a              LDR      r1,|L10.124|
000054  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000056  f7fffffe          BL       I2c_Delay
00005a  1c68              ADDS     r0,r5,#1              ;188
00005c  b2c5              UXTB     r5,r0                 ;188
                  |L10.94|
00005e  2d08              CMP      r5,#8                 ;188
000060  dbd5              BLT      |L10.14|
;;;207    	}
;;;208    	I2C_SCL_0();		//第9个时钟,SCL低电平,等待应答信号来到
000062  f44f5180          MOV      r1,#0x1000
000066  4804              LDR      r0,|L10.120|
000068  f7fffffe          BL       GPIO_ResetBits
;;;209    	I2c_Delay(StI2cInfo.uiI2cSpeed);
00006c  4903              LDR      r1,|L10.124|
00006e  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000070  f7fffffe          BL       I2c_Delay
;;;210    }
000074  bd70              POP      {r4-r6,pc}
;;;211    
                          ENDP

000076  0000              DCW      0x0000
                  |L10.120|
                          DCD      0x40011000
                  |L10.124|
                          DCD      StI2cInfo

                          AREA ||i.I2c_Start||, CODE, READONLY, ALIGN=2

                  I2c_Start PROC
;;;143    //--------------------------------------------------------------------------------------------------------
;;;144    void I2c_Start(void)
000000  b510              PUSH     {r4,lr}
;;;145    {
;;;146    	I2C_SDA_1();						//拉高SDA线
000002  f44f6100          MOV      r1,#0x800
000006  480d              LDR      r0,|L11.60|
000008  f7fffffe          BL       GPIO_SetBits
;;;147    	I2C_SCL_1();						//拉高SCL线
00000c  f44f5180          MOV      r1,#0x1000
000010  480a              LDR      r0,|L11.60|
000012  f7fffffe          BL       GPIO_SetBits
;;;148    	I2c_Delay(StI2cInfo.uiI2cSpeed);					//延时，速度控制
000016  490a              LDR      r1,|L11.64|
000018  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00001a  f7fffffe          BL       I2c_Delay
;;;149    	
;;;150    	I2C_SDA_0();						//当SCL线为高时，SDA线一个下降沿代表开始信号
00001e  f44f6100          MOV      r1,#0x800
000022  4806              LDR      r0,|L11.60|
000024  f7fffffe          BL       GPIO_ResetBits
;;;151    	I2c_Delay(StI2cInfo.uiI2cSpeed);					//延时，速度控制
000028  4905              LDR      r1,|L11.64|
00002a  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00002c  f7fffffe          BL       I2c_Delay
;;;152    	I2C_SCL_0();	
000030  f44f5180          MOV      r1,#0x1000
000034  4801              LDR      r0,|L11.60|
000036  f7fffffe          BL       GPIO_ResetBits
;;;153    }
00003a  bd10              POP      {r4,pc}
;;;154    
                          ENDP

                  |L11.60|
                          DCD      0x40011000
                  |L11.64|
                          DCD      StI2cInfo

                          AREA ||i.I2c_Stop||, CODE, READONLY, ALIGN=2

                  I2c_Stop PROC
;;;162    //--------------------------------------------------------------------------------------------------------
;;;163    void I2c_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;164    {
;;;165    	I2C_SDA_0();
000002  f44f6100          MOV      r1,#0x800
000006  480d              LDR      r0,|L12.60|
000008  f7fffffe          BL       GPIO_ResetBits
;;;166    	I2C_SCL_0();
00000c  f44f5180          MOV      r1,#0x1000
000010  480a              LDR      r0,|L12.60|
000012  f7fffffe          BL       GPIO_ResetBits
;;;167    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000016  490a              LDR      r1,|L12.64|
000018  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
00001a  f7fffffe          BL       I2c_Delay
;;;168    	
;;;169    	I2C_SCL_1();
00001e  f44f5180          MOV      r1,#0x1000
000022  4806              LDR      r0,|L12.60|
000024  f7fffffe          BL       GPIO_SetBits
;;;170    	I2C_SDA_1();
000028  f44f6100          MOV      r1,#0x800
00002c  4803              LDR      r0,|L12.60|
00002e  f7fffffe          BL       GPIO_SetBits
;;;171    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000032  4903              LDR      r1,|L12.64|
000034  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000036  f7fffffe          BL       I2c_Delay
;;;172    }
00003a  bd10              POP      {r4,pc}
;;;173    
                          ENDP

                  |L12.60|
                          DCD      0x40011000
                  |L12.64|
                          DCD      StI2cInfo

                          AREA ||i.I2c_WaitAck||, CODE, READONLY, ALIGN=2

                  I2c_WaitAck PROC
;;;306    //--------------------------------------------------------------------------------------------------------
;;;307    uint8_t I2c_WaitAck(uint16_t _usErrTime)
000000  b570              PUSH     {r4-r6,lr}
;;;308    {
000002  4604              MOV      r4,r0
;;;309    	uint8_t ucAck = 0xFF;
000004  25ff              MOVS     r5,#0xff
;;;310    	
;;;311    	I2C_SDA_1();
000006  f44f6100          MOV      r1,#0x800
00000a  4814              LDR      r0,|L13.92|
00000c  f7fffffe          BL       GPIO_SetBits
;;;312    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000010  4913              LDR      r1,|L13.96|
000012  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000014  f7fffffe          BL       I2c_Delay
;;;313    	I2C_SCL_1();		//此时判断是否有应答
000018  f44f5180          MOV      r1,#0x1000
00001c  480f              LDR      r0,|L13.92|
00001e  f7fffffe          BL       GPIO_SetBits
;;;314    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000022  490f              LDR      r1,|L13.96|
000024  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000026  f7fffffe          BL       I2c_Delay
;;;315    	
;;;316    //	if(I2C_SDA_READ)
;;;317    	while (I2C_SDA_READ && (_usErrTime--))	//增加一个时长等待,确保应答与非应答信号的稳定
00002a  e000              B        |L13.46|
                  |L13.44|
;;;318    	{
;;;319    		ucAck = I2C_NACK;	
00002c  2501              MOVS     r5,#1
                  |L13.46|
00002e  f44f6100          MOV      r1,#0x800             ;317
000032  480a              LDR      r0,|L13.92|
000034  f7fffffe          BL       GPIO_ReadInputDataBit
000038  b120              CBZ      r0,|L13.68|
00003a  1e20              SUBS     r0,r4,#0              ;317
00003c  f1a40101          SUB      r1,r4,#1              ;317
000040  b28c              UXTH     r4,r1                 ;317
000042  d1f3              BNE      |L13.44|
                  |L13.68|
;;;320    	}
;;;321    //	else
;;;322    	{
;;;323    		ucAck = I2C_ACK;	
000044  2500              MOVS     r5,#0
;;;324    	}
;;;325    	
;;;326    	I2C_SCL_0();
000046  f44f5180          MOV      r1,#0x1000
00004a  4804              LDR      r0,|L13.92|
00004c  f7fffffe          BL       GPIO_ResetBits
;;;327    	I2c_Delay(StI2cInfo.uiI2cSpeed);
000050  4903              LDR      r1,|L13.96|
000052  8808              LDRH     r0,[r1,#0]  ; StI2cInfo
000054  f7fffffe          BL       I2c_Delay
;;;328    	
;;;329    	return ucAck;
000058  4628              MOV      r0,r5
;;;330    }
00005a  bd70              POP      {r4-r6,pc}
;;;331    #endif
                          ENDP

                  |L13.92|
                          DCD      0x40011000
                  |L13.96|
                          DCD      StI2cInfo

                          AREA ||.data||, DATA, ALIGN=1

                  StI2cInfo
000000  0000              DCB      0x00,0x00
