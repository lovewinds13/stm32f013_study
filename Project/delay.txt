; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\delay.o --asm_dir=.\ --list_dir=.\ --depend=.\delay.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I..\Driver\src -ID:\KEIL_ARM_PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\keil_arm\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=533 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\delay.crf ..\Driver\src\delay.c]
                          THUMB

                          AREA ||i.Sys_DelayUs||, CODE, READONLY, ALIGN=1

                  Sys_DelayUs PROC
;;;229    	
;;;230    void Sys_DelayUs(volatile uint32_t _ulDelayTimes)
000000  b501              PUSH     {r0,lr}
;;;231    {
;;;232    	while (_ulDelayTimes--)
000002  e009              B        |L1.24|
                  |L1.4|
;;;233    	{
;;;234    		__NOP();
000004  bf00              NOP      
;;;235    		__NOP();
000006  bf00              NOP      
;;;236    		__NOP();
000008  bf00              NOP      
;;;237    		__NOP();
00000a  bf00              NOP      
;;;238    		__NOP();
00000c  bf00              NOP      
;;;239    		__NOP();
00000e  bf00              NOP      
;;;240    		__NOP();
000010  bf00              NOP      
;;;241    		__NOP();
000012  bf00              NOP      
;;;242    		__NOP();
000014  bf00              NOP      
;;;243    		__NOP();
000016  bf00              NOP      
                  |L1.24|
000018  9800              LDR      r0,[sp,#0]            ;232
00001a  1e41              SUBS     r1,r0,#1              ;232
00001c  9100              STR      r1,[sp,#0]            ;232
00001e  2800              CMP      r0,#0                 ;232
000020  d1f0              BNE      |L1.4|
;;;244    		
;;;245    	}
;;;246    	
;;;247    }
000022  bd08              POP      {r3,pc}
;;;248    
                          ENDP


                          AREA ||i.Sys_delay_ms||, CODE, READONLY, ALIGN=1

                  Sys_delay_ms PROC
;;;256    
;;;257    void Sys_delay_ms(volatile uint32_t _ulTmies)
000000  b501              PUSH     {r0,lr}
;;;258    {
;;;259    	while (_ulTmies--)
000002  e002              B        |L2.10|
                  |L2.4|
;;;260    	{
;;;261    		delay_ms(1);
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       delay_ms
                  |L2.10|
00000a  9800              LDR      r0,[sp,#0]            ;259
00000c  1e41              SUBS     r1,r0,#1              ;259
00000e  9100              STR      r1,[sp,#0]            ;259
000010  2800              CMP      r0,#0                 ;259
000012  d1f7              BNE      |L2.4|
;;;262    	}
;;;263    }
000014  bd08              POP      {r3,pc}
;;;264    
                          ENDP


                          AREA ||i.Sys_delay_us||, CODE, READONLY, ALIGN=1

                  Sys_delay_us PROC
;;;248    
;;;249    void Sys_delay_us(volatile uint32_t _ulTmies)
000000  b501              PUSH     {r0,lr}
;;;250    {
;;;251    	while (_ulTmies--)
000002  e002              B        |L3.10|
                  |L3.4|
;;;252    	{
;;;253    		delay_us(1);
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       delay_us
                  |L3.10|
00000a  9800              LDR      r0,[sp,#0]            ;251
00000c  1e41              SUBS     r1,r0,#1              ;251
00000e  9100              STR      r1,[sp,#0]            ;251
000010  2800              CMP      r0,#0                 ;251
000012  d1f7              BNE      |L3.4|
;;;254    	}
;;;255    }
000014  bd08              POP      {r3,pc}
;;;256    
                          ENDP


                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;132    //SYSCLK:系统时钟
;;;133    void delay_init()
000000  b510              PUSH     {r4,lr}
;;;134    {
;;;135    #if SYSTEM_SUPPORT_OS  							//如果需要支持OS.
;;;136    	u32 reload;
;;;137    #endif
;;;138    	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);	//选择外部时钟  HCLK/8
000002  f06f0004          MVN      r0,#4
000006  f7fffffe          BL       SysTick_CLKSourceConfig
;;;139    	fac_us = SystemCoreClock/8000000;				//为系统时钟的1/8  
00000a  480a              LDR      r0,|L4.52|
00000c  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00000e  490a              LDR      r1,|L4.56|
000010  fbb0f0f1          UDIV     r0,r0,r1
000014  4909              LDR      r1,|L4.60|
000016  7008              STRB     r0,[r1,#0]
;;;140    #if SYSTEM_SUPPORT_OS  							//如果需要支持OS.
;;;141    	reload = SystemCoreClock/8000000;				//每秒钟的计数次数 单位为M  
;;;142    	reload *= 1000000/delay_ostickspersec;		//根据delay_ostickspersec设定溢出时间
;;;143    												//reload为24位寄存器,最大值:16777216,在72M下,约合1.86s左右	
;;;144    	fac_ms = 1000/delay_ostickspersec;			//代表OS可以延时的最少单位	   
;;;145    
;;;146    	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;   	//开启SYSTICK中断
;;;147    	SysTick->LOAD = reload; 						//每1/delay_ostickspersec秒中断一次	
;;;148    	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;   	//开启SYSTICK    
;;;149    
;;;150    #else
;;;151    	fac_ms = (u16)fac_us*1000;					//非OS下,代表每个ms需要的systick时钟数   
000018  4608              MOV      r0,r1
00001a  7800              LDRB     r0,[r0,#0]  ; fac_us
00001c  eb000140          ADD      r1,r0,r0,LSL #1
000020  ebc110c0          RSB      r0,r1,r0,LSL #7
000024  f64f71ff          MOV      r1,#0xffff
000028  ea0100c0          AND      r0,r1,r0,LSL #3
00002c  4904              LDR      r1,|L4.64|
00002e  8008              STRH     r0,[r1,#0]
;;;152    #endif
;;;153    }								    
000030  bd10              POP      {r4,pc}
;;;154    
                          ENDP

000032  0000              DCW      0x0000
                  |L4.52|
                          DCD      SystemCoreClock
                  |L4.56|
                          DCD      0x007a1200
                  |L4.60|
                          DCD      fac_us
                  |L4.64|
                          DCD      fac_ms

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;215    //对72M条件下,nms<=1864 
;;;216    void delay_ms(u16 nms)
000000  4601              MOV      r1,r0
;;;217    {	 		  	  
;;;218    	u32 temp;		   
;;;219    	SysTick->LOAD=(u32)nms*fac_ms;				//时间加载(SysTick->LOAD为24bit)
000002  4a11              LDR      r2,|L5.72|
000004  8812              LDRH     r2,[r2,#0]  ; fac_ms
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;220    	SysTick->VAL =0x00;							//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;221    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数  
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;222    	do
00001c  bf00              NOP      
                  |L5.30|
;;;223    	{
;;;224    		temp=SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;225    	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L5.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L5.30|
                  |L5.50|
;;;226    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;227    	SysTick->VAL =0X00;       					//清空计数器	  	    
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;228    } 
000046  4770              BX       lr
;;;229    	
                          ENDP

                  |L5.72|
                          DCD      fac_ms

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;196    //nus为要延时的us数.		    								   
;;;197    void delay_us(u32 nus)
000000  4601              MOV      r1,r0
;;;198    {		
;;;199    	u32 temp;	    	 
;;;200    	SysTick->LOAD=nus*fac_us; 					//时间加载	  		 
000002  4a11              LDR      r2,|L6.72|
000004  7812              LDRB     r2,[r2,#0]  ; fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;201    	SysTick->VAL=0x00;        					//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;202    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数	  
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;203    	do
00001c  bf00              NOP      
                  |L6.30|
;;;204    	{
;;;205    		temp=SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;206    	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L6.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L6.30|
                  |L6.50|
;;;207    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;208    	SysTick->VAL =0X00;      					 //清空计数器	 
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;209    }
000046  4770              BX       lr
;;;210    //延时nms
                          ENDP

                  |L6.72|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
